name: Deploy to ECR

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Vault using OIDC
      id: vault_login
      env:
        VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
        VAULT_ROLE: ${{ secrets.VAULT_ROLE }}
      run: |
        echo "Fetching JWT token from GitHub Actions"
        export JWT=$(curl -s -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "https://vstoken.actions.githubusercontent.com/.well-known/openid-configuration")
        
        echo "Logging into Vault using OIDC"
        VAULT_LOGIN=$(vault write -field=token auth/oidc/login role="$VAULT_ROLE" jwt="$JWT")
        echo "::add-mask::$VAULT_LOGIN"
        echo "vault_token=$VAULT_LOGIN" >> $GITHUB_ENV

    - name: Retrieve AWS credentials from Vault
      id: aws_creds
      env:
        VAULT_TOKEN: ${{ env.vault_token }}
        VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
        VAULT_ROLE: ${{ secrets.VAULT_ROLE }}
      run: |
        echo "Retrieving dynamic AWS credentials from Vault"
        VAULT_CREDS=$(vault read -format=json aws/creds/$VAULT_ROLE)
        export AWS_ACCESS_KEY_ID=$(echo $VAULT_CREDS | jq -r .data.access_key)
        export AWS_SECRET_ACCESS_KEY=$(echo $VAULT_CREDS | jq -r .data.secret_key)
        export AWS_SESSION_TOKEN=$(echo $VAULT_CREDS | jq -r .data.security_token)
        echo "::add-mask::$AWS_ACCESS_KEY_ID"
        echo "::add-mask::$AWS_SECRET_ACCESS_KEY"
        echo "::add-mask::$AWS_SESSION_TOKEN"
        echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> $GITHUB_ENV
        echo "AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN" >> $GITHUB_ENV

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
        aws-region: ap-south-1

    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 471112663300.dkr.ecr.ap-south-1.amazonaws.com

    - name: Build and push Docker image
      env:
        ECR_REGISTRY: <YOUR_ECR_REGISTRY>
        ECR_REPOSITORY: <YOUR_ECR_REPOSITORY>
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker buildx build --platform linux/amd64 -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
